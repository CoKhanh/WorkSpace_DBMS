#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMCC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PMCC")]
	public partial class PMCCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertShift(Shift instance);
    partial void UpdateShift(Shift instance);
    partial void DeleteShift(Shift instance);
    partial void InsertShiftPerWeek(ShiftPerWeek instance);
    partial void UpdateShiftPerWeek(ShiftPerWeek instance);
    partial void DeleteShiftPerWeek(ShiftPerWeek instance);
    partial void InsertTime_Keeper(Time_Keeper instance);
    partial void UpdateTime_Keeper(Time_Keeper instance);
    partial void DeleteTime_Keeper(Time_Keeper instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertAsign(Asign instance);
    partial void UpdateAsign(Asign instance);
    partial void DeleteAsign(Asign instance);
    #endregion
		
		public PMCCDataContext() : 
				base(global::PMCC.Properties.Settings.Default.PMCCConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public PMCCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PMCCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PMCCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PMCCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Shift> Shifts
		{
			get
			{
				return this.GetTable<Shift>();
			}
		}
		
		public System.Data.Linq.Table<ShiftPerWeek> ShiftPerWeeks
		{
			get
			{
				return this.GetTable<ShiftPerWeek>();
			}
		}
		
		public System.Data.Linq.Table<Time_Keeper> Time_Keepers
		{
			get
			{
				return this.GetTable<Time_Keeper>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<Asign> Asigns
		{
			get
			{
				return this.GetTable<Asign>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddEmp")]
		public int AddEmp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string sex, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> birthdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string position, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string networkIP)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), password, email, name, sex, birthdate, phone, address, position, salary, networkIP);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ConfirmShift")]
		public int ConfirmShift([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="VarChar(100)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> totalTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dayWork)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, totalTime, dayWork);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateEmpInfo")]
		public int UpdateEmpInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="VarChar(100)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string sex, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> birthdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string position, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BasicSalary", DbType="Real")] System.Nullable<float> basicSalary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string attitude)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, name, email, sex, birthdate, phone, address, position, basicSalary, attitude);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateEmpinfo_Basic")]
		public int UpdateEmpinfo_Basic([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="VarChar(100)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string phone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, name, email, phone);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdatePassword")]
		public int UpdatePassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AttitudeCheck", IsComposable=true)]
		public System.Nullable<int> AttitudeCheck([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="VarChar(100)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dayWork)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, dayWork).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AutoId", IsComposable=true)]
		public System.Nullable<int> AutoId()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetContact", IsComposable=true)]
		public string GetContact([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEmail", IsComposable=true)]
		public string GetEmail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetName", IsComposable=true)]
		public string GetName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsLogin", IsComposable=true)]
		public System.Nullable<int> IsLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string password)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, password).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.luong", IsComposable=true)]
		public System.Nullable<decimal> luong([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> month)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, month).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateID", IsComposable=true)]
		public string CreateID()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadData", IsComposable=true)]
		public IQueryable<LoadDataResult> LoadData()
		{
			return this.CreateMethodCallQuery<LoadDataResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteEmp")]
		public int DeleteEmp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="VarChar(100)")] string empId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Check_CheckedShift", IsComposable=true)]
		public System.Nullable<int> Check_CheckedShift([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpID", DbType="VarChar(100)")] string empID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empID, date).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckShift")]
		public int CheckShift([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="VarChar(100)")] string empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> dayWork, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckTime", DbType="Time")] System.Nullable<System.TimeSpan> checkTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empId, dayWork, checkTime, note);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Test", IsComposable=true)]
		public IQueryable<TestResult> Test([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id)
		{
			return this.CreateMethodCallQuery<TestResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TotalTime", IsComposable=true)]
		public System.Nullable<decimal> TotalTime([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromMonth", DbType="Date")] System.Nullable<System.DateTime> fromMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToMonth", DbType="Date")] System.Nullable<System.DateTime> toMonth)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, fromMonth, toMonth).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadSalaryDetails")]
		public ISingleResult<LoadSalaryDetailsResult> LoadSalaryDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, startDate, endDate);
			return ((ISingleResult<LoadSalaryDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddToSalary")]
		public int AddToSalary([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, month);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckRevenuePerMonth", IsComposable=true)]
		public System.Nullable<int> CheckRevenuePerMonth([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> month)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, month).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPosition", IsComposable=true)]
		public string GetPosition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShiftTime")]
		public int ShiftTime([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpID", DbType="VarChar(100)")] string empID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> day)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empID, day);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.checkNV", IsComposable=true)]
		public IQueryable<checkNVResult1> checkNV([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name)
		{
			return this.CreateMethodCallQuery<checkNVResult1>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadSalaryTable", IsComposable=true)]
		public IQueryable<LoadSalaryTableResult> LoadSalaryTable([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> month, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> year)
		{
			return this.CreateMethodCallQuery<LoadSalaryTableResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, month, year);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddProject")]
		public int AddProject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> bonus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, bonus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UnableProject")]
		public int UnableProject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadProjectTable")]
		public ISingleResult<LoadProjectTableResult> LoadProjectTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<LoadProjectTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddEmpToProj")]
		public int AddEmpToProj([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjName", DbType="NVarChar(100)")] string projName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string idEmp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projName, idEmp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveFromProj")]
		public int RemoveFromProj([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjName", DbType="NVarChar(100)")] string projName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string idEmp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projName, idEmp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditProject")]
		public int EditProject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> bonus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, bonus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadProjDetails")]
		public ISingleResult<LoadProjDetailsResult> LoadProjDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjName", DbType="NVarChar(100)")] string projName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projName);
			return ((ISingleResult<LoadProjDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadRevenueTable")]
		public ISingleResult<LoadRevenueTableResult> LoadRevenueTable([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, month);
			return ((ISingleResult<LoadRevenueTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RecoveryPassword")]
		public int RecoveryPassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string newpass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, newpass);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private System.Data.Linq.Binary _password;
		
		private string _NetworkIp;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnpasswordChanging(System.Data.Linq.Binary value);
    partial void OnpasswordChanged();
    partial void OnNetworkIpChanging(string value);
    partial void OnNetworkIpChanged();
    #endregion
		
		public Account()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkIp", DbType="NVarChar(100)")]
		public string NetworkIp
		{
			get
			{
				return this._NetworkIp;
			}
			set
			{
				if ((this._NetworkIp != value))
				{
					this.OnNetworkIpChanging(value);
					this.SendPropertyChanging();
					this._NetworkIp = value;
					this.SendPropertyChanged("NetworkIp");
					this.OnNetworkIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Account", Storage="_Employee", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Account = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Account = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _email;
		
		private string _name;
		
		private string _sex;
		
		private System.Nullable<System.DateTime> _birthdate;
		
		private string _phone;
		
		private string _address;
		
		private string _position;
		
		private System.Nullable<float> _BasicSalary;
		
		private string _attitude;
		
		private EntityRef<Account> _Account;
		
		private EntitySet<ShiftPerWeek> _ShiftPerWeeks;
		
		private EntitySet<Time_Keeper> _Time_Keepers;
		
		private EntitySet<Salary> _Salaries;
		
		private EntitySet<Asign> _Asigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void OnBasicSalaryChanging(System.Nullable<float> value);
    partial void OnBasicSalaryChanged();
    partial void OnattitudeChanging(string value);
    partial void OnattitudeChanged();
    #endregion
		
		public Employee()
		{
			this._Account = default(EntityRef<Account>);
			this._ShiftPerWeeks = new EntitySet<ShiftPerWeek>(new Action<ShiftPerWeek>(this.attach_ShiftPerWeeks), new Action<ShiftPerWeek>(this.detach_ShiftPerWeeks));
			this._Time_Keepers = new EntitySet<Time_Keeper>(new Action<Time_Keeper>(this.attach_Time_Keepers), new Action<Time_Keeper>(this.detach_Time_Keepers));
			this._Salaries = new EntitySet<Salary>(new Action<Salary>(this.attach_Salaries), new Action<Salary>(this.detach_Salaries));
			this._Asigns = new EntitySet<Asign>(new Action<Asign>(this.attach_Asigns), new Action<Asign>(this.detach_Asigns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(10)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="NVarChar(50)")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSalary", DbType="Real")]
		public System.Nullable<float> BasicSalary
		{
			get
			{
				return this._BasicSalary;
			}
			set
			{
				if ((this._BasicSalary != value))
				{
					this.OnBasicSalaryChanging(value);
					this.SendPropertyChanging();
					this._BasicSalary = value;
					this.SendPropertyChanged("BasicSalary");
					this.OnBasicSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attitude", DbType="NVarChar(100)")]
		public string attitude
		{
			get
			{
				return this._attitude;
			}
			set
			{
				if ((this._attitude != value))
				{
					this.OnattitudeChanging(value);
					this.SendPropertyChanging();
					this._attitude = value;
					this.SendPropertyChanged("attitude");
					this.OnattitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Account", Storage="_Account", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Employee = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ShiftPerWeek", Storage="_ShiftPerWeeks", ThisKey="id", OtherKey="EmpId")]
		public EntitySet<ShiftPerWeek> ShiftPerWeeks
		{
			get
			{
				return this._ShiftPerWeeks;
			}
			set
			{
				this._ShiftPerWeeks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Time_Keeper", Storage="_Time_Keepers", ThisKey="id", OtherKey="id")]
		public EntitySet<Time_Keeper> Time_Keepers
		{
			get
			{
				return this._Time_Keepers;
			}
			set
			{
				this._Time_Keepers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Salary", Storage="_Salaries", ThisKey="id", OtherKey="EmpID")]
		public EntitySet<Salary> Salaries
		{
			get
			{
				return this._Salaries;
			}
			set
			{
				this._Salaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Asign", Storage="_Asigns", ThisKey="id", OtherKey="idEmp")]
		public EntitySet<Asign> Asigns
		{
			get
			{
				return this._Asigns;
			}
			set
			{
				this._Asigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShiftPerWeeks(ShiftPerWeek entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ShiftPerWeeks(ShiftPerWeek entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Time_Keepers(Time_Keeper entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Time_Keepers(Time_Keeper entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Asigns(Asign entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Asigns(Asign entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift")]
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ShiftId;
		
		private string _shiftTime;
		
		private string _shiftName;
		
		private EntitySet<ShiftPerWeek> _ShiftPerWeeks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShiftIdChanging(string value);
    partial void OnShiftIdChanged();
    partial void OnshiftTimeChanging(string value);
    partial void OnshiftTimeChanged();
    partial void OnshiftNameChanging(string value);
    partial void OnshiftNameChanged();
    #endregion
		
		public Shift()
		{
			this._ShiftPerWeeks = new EntitySet<ShiftPerWeek>(new Action<ShiftPerWeek>(this.attach_ShiftPerWeeks), new Action<ShiftPerWeek>(this.detach_ShiftPerWeeks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShiftId
		{
			get
			{
				return this._ShiftId;
			}
			set
			{
				if ((this._ShiftId != value))
				{
					this.OnShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftId = value;
					this.SendPropertyChanged("ShiftId");
					this.OnShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shiftTime", DbType="NVarChar(20)")]
		public string shiftTime
		{
			get
			{
				return this._shiftTime;
			}
			set
			{
				if ((this._shiftTime != value))
				{
					this.OnshiftTimeChanging(value);
					this.SendPropertyChanging();
					this._shiftTime = value;
					this.SendPropertyChanged("shiftTime");
					this.OnshiftTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shiftName", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string shiftName
		{
			get
			{
				return this._shiftName;
			}
			set
			{
				if ((this._shiftName != value))
				{
					this.OnshiftNameChanging(value);
					this.SendPropertyChanging();
					this._shiftName = value;
					this.SendPropertyChanged("shiftName");
					this.OnshiftNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_ShiftPerWeek", Storage="_ShiftPerWeeks", ThisKey="ShiftId,shiftName", OtherKey="ShiftId,ShiftName")]
		public EntitySet<ShiftPerWeek> ShiftPerWeeks
		{
			get
			{
				return this._ShiftPerWeeks;
			}
			set
			{
				this._ShiftPerWeeks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShiftPerWeeks(ShiftPerWeek entity)
		{
			this.SendPropertyChanging();
			entity.Shift = this;
		}
		
		private void detach_ShiftPerWeeks(ShiftPerWeek entity)
		{
			this.SendPropertyChanging();
			entity.Shift = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShiftPerWeek")]
	public partial class ShiftPerWeek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpId;
		
		private string _ShiftId;
		
		private string _ShiftName;
		
		private System.DateTime _day;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Shift> _Shift;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIdChanging(string value);
    partial void OnEmpIdChanged();
    partial void OnShiftIdChanging(string value);
    partial void OnShiftIdChanged();
    partial void OnShiftNameChanging(string value);
    partial void OnShiftNameChanged();
    partial void OndayChanging(System.DateTime value);
    partial void OndayChanged();
    #endregion
		
		public ShiftPerWeek()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Shift = default(EntityRef<Shift>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShiftId
		{
			get
			{
				return this._ShiftId;
			}
			set
			{
				if ((this._ShiftId != value))
				{
					if (this._Shift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftId = value;
					this.SendPropertyChanged("ShiftId");
					this.OnShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftName", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShiftName
		{
			get
			{
				return this._ShiftName;
			}
			set
			{
				if ((this._ShiftName != value))
				{
					if (this._Shift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftNameChanging(value);
					this.SendPropertyChanging();
					this._ShiftName = value;
					this.SendPropertyChanged("ShiftName");
					this.OnShiftNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ShiftPerWeek", Storage="_Employee", ThisKey="EmpId", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ShiftPerWeeks.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ShiftPerWeeks.Add(this);
						this._EmpId = value.id;
					}
					else
					{
						this._EmpId = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_ShiftPerWeek", Storage="_Shift", ThisKey="ShiftId,ShiftName", OtherKey="ShiftId,shiftName", IsForeignKey=true)]
		public Shift Shift
		{
			get
			{
				return this._Shift.Entity;
			}
			set
			{
				Shift previousValue = this._Shift.Entity;
				if (((previousValue != value) 
							|| (this._Shift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift.Entity = null;
						previousValue.ShiftPerWeeks.Remove(this);
					}
					this._Shift.Entity = value;
					if ((value != null))
					{
						value.ShiftPerWeeks.Add(this);
						this._ShiftId = value.ShiftId;
						this._ShiftName = value.shiftName;
					}
					else
					{
						this._ShiftId = default(string);
						this._ShiftName = default(string);
					}
					this.SendPropertyChanged("Shift");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Time_Keeper")]
	public partial class Time_Keeper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private System.Nullable<System.TimeSpan> _CheckIn;
		
		private System.Nullable<System.TimeSpan> _CheckOut;
		
		private System.DateTime _dateWork;
		
		private System.Nullable<int> _totalTime;
		
		private string _notePerShift;
		
		private string _attitude;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnCheckInChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCheckInChanged();
    partial void OnCheckOutChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCheckOutChanged();
    partial void OndateWorkChanging(System.DateTime value);
    partial void OndateWorkChanged();
    partial void OntotalTimeChanging(System.Nullable<int> value);
    partial void OntotalTimeChanged();
    partial void OnnotePerShiftChanging(string value);
    partial void OnnotePerShiftChanged();
    partial void OnattitudeChanging(string value);
    partial void OnattitudeChanged();
    #endregion
		
		public Time_Keeper()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="Time")]
		public System.Nullable<System.TimeSpan> CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this.OnCheckInChanging(value);
					this.SendPropertyChanging();
					this._CheckIn = value;
					this.SendPropertyChanged("CheckIn");
					this.OnCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOut", DbType="Time")]
		public System.Nullable<System.TimeSpan> CheckOut
		{
			get
			{
				return this._CheckOut;
			}
			set
			{
				if ((this._CheckOut != value))
				{
					this.OnCheckOutChanging(value);
					this.SendPropertyChanging();
					this._CheckOut = value;
					this.SendPropertyChanged("CheckOut");
					this.OnCheckOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateWork", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dateWork
		{
			get
			{
				return this._dateWork;
			}
			set
			{
				if ((this._dateWork != value))
				{
					this.OndateWorkChanging(value);
					this.SendPropertyChanging();
					this._dateWork = value;
					this.SendPropertyChanged("dateWork");
					this.OndateWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTime", DbType="Int")]
		public System.Nullable<int> totalTime
		{
			get
			{
				return this._totalTime;
			}
			set
			{
				if ((this._totalTime != value))
				{
					this.OntotalTimeChanging(value);
					this.SendPropertyChanging();
					this._totalTime = value;
					this.SendPropertyChanged("totalTime");
					this.OntotalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notePerShift", DbType="NVarChar(MAX)")]
		public string notePerShift
		{
			get
			{
				return this._notePerShift;
			}
			set
			{
				if ((this._notePerShift != value))
				{
					this.OnnotePerShiftChanging(value);
					this.SendPropertyChanging();
					this._notePerShift = value;
					this.SendPropertyChanged("notePerShift");
					this.OnnotePerShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attitude", DbType="NVarChar(100)")]
		public string attitude
		{
			get
			{
				return this._attitude;
			}
			set
			{
				if ((this._attitude != value))
				{
					this.OnattitudeChanging(value);
					this.SendPropertyChanging();
					this._attitude = value;
					this.SendPropertyChanged("attitude");
					this.OnattitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Time_Keeper", Storage="_Employee", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Time_Keepers.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Time_Keepers.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _Name;
		
		private System.DateTime _inMonth;
		
		private System.Nullable<int> _totalTime;
		
		private System.Nullable<int> _TotalSalary;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OninMonthChanging(System.DateTime value);
    partial void OninMonthChanged();
    partial void OntotalTimeChanging(System.Nullable<int> value);
    partial void OntotalTimeChanged();
    partial void OnTotalSalaryChanging(System.Nullable<int> value);
    partial void OnTotalSalaryChanged();
    #endregion
		
		public Salary()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inMonth", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime inMonth
		{
			get
			{
				return this._inMonth;
			}
			set
			{
				if ((this._inMonth != value))
				{
					this.OninMonthChanging(value);
					this.SendPropertyChanging();
					this._inMonth = value;
					this.SendPropertyChanged("inMonth");
					this.OninMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTime", DbType="Int")]
		public System.Nullable<int> totalTime
		{
			get
			{
				return this._totalTime;
			}
			set
			{
				if ((this._totalTime != value))
				{
					this.OntotalTimeChanging(value);
					this.SendPropertyChanging();
					this._totalTime = value;
					this.SendPropertyChanged("totalTime");
					this.OntotalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSalary", DbType="Int")]
		public System.Nullable<int> TotalSalary
		{
			get
			{
				return this._TotalSalary;
			}
			set
			{
				if ((this._TotalSalary != value))
				{
					this.OnTotalSalaryChanging(value);
					this.SendPropertyChanging();
					this._TotalSalary = value;
					this.SendPropertyChanged("TotalSalary");
					this.OnTotalSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Salary", Storage="_Employee", ThisKey="EmpID", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Salaries.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Salaries.Add(this);
						this._EmpID = value.id;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _Bonus;
		
		private string _attitude;
		
		private EntitySet<Asign> _Asigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBonusChanging(System.Nullable<int> value);
    partial void OnBonusChanged();
    partial void OnattitudeChanging(string value);
    partial void OnattitudeChanged();
    #endregion
		
		public Project()
		{
			this._Asigns = new EntitySet<Asign>(new Action<Asign>(this.attach_Asigns), new Action<Asign>(this.detach_Asigns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Int")]
		public System.Nullable<int> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attitude", DbType="NVarChar(100)")]
		public string attitude
		{
			get
			{
				return this._attitude;
			}
			set
			{
				if ((this._attitude != value))
				{
					this.OnattitudeChanging(value);
					this.SendPropertyChanging();
					this._attitude = value;
					this.SendPropertyChanged("attitude");
					this.OnattitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Asign", Storage="_Asigns", ThisKey="id", OtherKey="idProj")]
		public EntitySet<Asign> Asigns
		{
			get
			{
				return this._Asigns;
			}
			set
			{
				this._Asigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asigns(Asign entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Asigns(Asign entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asign")]
	public partial class Asign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProj;
		
		private string _idEmp;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProjChanging(int value);
    partial void OnidProjChanged();
    partial void OnidEmpChanging(string value);
    partial void OnidEmpChanged();
    #endregion
		
		public Asign()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProj", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProj
		{
			get
			{
				return this._idProj;
			}
			set
			{
				if ((this._idProj != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProjChanging(value);
					this.SendPropertyChanging();
					this._idProj = value;
					this.SendPropertyChanged("idProj");
					this.OnidProjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmp", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idEmp
		{
			get
			{
				return this._idEmp;
			}
			set
			{
				if ((this._idEmp != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpChanging(value);
					this.SendPropertyChanging();
					this._idEmp = value;
					this.SendPropertyChanged("idEmp");
					this.OnidEmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Asign", Storage="_Employee", ThisKey="idEmp", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Asigns.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Asigns.Add(this);
						this._idEmp = value.id;
					}
					else
					{
						this._idEmp = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Asign", Storage="_Project", ThisKey="idProj", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Asigns.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Asigns.Add(this);
						this._idProj = value.id;
					}
					else
					{
						this._idProj = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class LoadDataResult
	{
		
		private string _ID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Sex;
		
		private string _Contact;
		
		private string _Position;
		
		private string _Address;
		
		private string _Email;
		
		public LoadDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(10)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(10)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this._Contact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class TestResult
	{
		
		private string _id;
		
		private System.Nullable<System.TimeSpan> _CheckIn;
		
		private System.Nullable<System.TimeSpan> _CheckOut;
		
		private System.DateTime _dateWork;
		
		private System.Nullable<int> _totalTime;
		
		private string _notePerShift;
		
		private string _attitude;
		
		public TestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="Time")]
		public System.Nullable<System.TimeSpan> CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this._CheckIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOut", DbType="Time")]
		public System.Nullable<System.TimeSpan> CheckOut
		{
			get
			{
				return this._CheckOut;
			}
			set
			{
				if ((this._CheckOut != value))
				{
					this._CheckOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateWork", DbType="Date NOT NULL")]
		public System.DateTime dateWork
		{
			get
			{
				return this._dateWork;
			}
			set
			{
				if ((this._dateWork != value))
				{
					this._dateWork = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTime", DbType="Int")]
		public System.Nullable<int> totalTime
		{
			get
			{
				return this._totalTime;
			}
			set
			{
				if ((this._totalTime != value))
				{
					this._totalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notePerShift", DbType="NVarChar(MAX)")]
		public string notePerShift
		{
			get
			{
				return this._notePerShift;
			}
			set
			{
				if ((this._notePerShift != value))
				{
					this._notePerShift = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attitude", DbType="NVarChar(100)")]
		public string attitude
		{
			get
			{
				return this._attitude;
			}
			set
			{
				if ((this._attitude != value))
				{
					this._attitude = value;
				}
			}
		}
	}
	
	public partial class LoadSalaryDetailsResult
	{
		
		private string _User;
		
		private System.Nullable<System.TimeSpan> _Check_In;
		
		private System.Nullable<System.TimeSpan> _Check_Out;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Total_Time;
		
		private string _Attitude;
		
		public LoadSalaryDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this._User = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Check In]", Storage="_Check_In", DbType="Time")]
		public System.Nullable<System.TimeSpan> Check_In
		{
			get
			{
				return this._Check_In;
			}
			set
			{
				if ((this._Check_In != value))
				{
					this._Check_In = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Check Out]", Storage="_Check_Out", DbType="Time")]
		public System.Nullable<System.TimeSpan> Check_Out
		{
			get
			{
				return this._Check_Out;
			}
			set
			{
				if ((this._Check_Out != value))
				{
					this._Check_Out = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Time]", Storage="_Total_Time", DbType="Int")]
		public System.Nullable<int> Total_Time
		{
			get
			{
				return this._Total_Time;
			}
			set
			{
				if ((this._Total_Time != value))
				{
					this._Total_Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attitude", DbType="NVarChar(100)")]
		public string Attitude
		{
			get
			{
				return this._Attitude;
			}
			set
			{
				if ((this._Attitude != value))
				{
					this._Attitude = value;
				}
			}
		}
	}
	
	public partial class checkNVResult1
	{
		
		private string _ID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Sex;
		
		private string _Contact;
		
		private string _Position;
		
		private string _Address;
		
		private string _Email;
		
		public checkNVResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(10)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(10)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this._Contact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class LoadSalaryTableResult
	{
		
		private string _ID;
		
		private string _Full_Name;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _Time;
		
		private System.Nullable<int> _Salary;
		
		public LoadSalaryTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Full Name]", Storage="_Full_Name", DbType="NVarChar(100)")]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this._Full_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int")]
		public System.Nullable<int> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Int")]
		public System.Nullable<int> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this._Salary = value;
				}
			}
		}
	}
	
	public partial class LoadProjectTableResult
	{
		
		private string _Project_name;
		
		private System.Nullable<int> _Bonus;
		
		private string _Attitude;
		
		public LoadProjectTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Project name]", Storage="_Project_name", DbType="NVarChar(100)")]
		public string Project_name
		{
			get
			{
				return this._Project_name;
			}
			set
			{
				if ((this._Project_name != value))
				{
					this._Project_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Int")]
		public System.Nullable<int> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this._Bonus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attitude", DbType="NVarChar(100)")]
		public string Attitude
		{
			get
			{
				return this._Attitude;
			}
			set
			{
				if ((this._Attitude != value))
				{
					this._Attitude = value;
				}
			}
		}
	}
	
	public partial class LoadProjDetailsResult
	{
		
		private string _Full_name;
		
		private System.Nullable<System.DateTime> _Birth_date;
		
		private string _Sex;
		
		private string _Phone;
		
		private string _Email;
		
		public LoadProjDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Full name]", Storage="_Full_name", DbType="NVarChar(100)")]
		public string Full_name
		{
			get
			{
				return this._Full_name;
			}
			set
			{
				if ((this._Full_name != value))
				{
					this._Full_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Birth date]", Storage="_Birth_date", DbType="Date")]
		public System.Nullable<System.DateTime> Birth_date
		{
			get
			{
				return this._Birth_date;
			}
			set
			{
				if ((this._Birth_date != value))
				{
					this._Birth_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(10)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class LoadRevenueTableResult
	{
		
		private string _EmpID;
		
		private string _Name;
		
		private System.DateTime _inMonth;
		
		private System.Nullable<int> _totalTime;
		
		private System.Nullable<int> _TotalSalary;
		
		public LoadRevenueTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inMonth", DbType="Date NOT NULL")]
		public System.DateTime inMonth
		{
			get
			{
				return this._inMonth;
			}
			set
			{
				if ((this._inMonth != value))
				{
					this._inMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalTime", DbType="Int")]
		public System.Nullable<int> totalTime
		{
			get
			{
				return this._totalTime;
			}
			set
			{
				if ((this._totalTime != value))
				{
					this._totalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSalary", DbType="Int")]
		public System.Nullable<int> TotalSalary
		{
			get
			{
				return this._TotalSalary;
			}
			set
			{
				if ((this._TotalSalary != value))
				{
					this._TotalSalary = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
